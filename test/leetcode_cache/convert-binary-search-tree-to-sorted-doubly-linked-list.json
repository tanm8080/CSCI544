{
  "questionId": "758",
  "questionFrontendId": "426",
  "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
  "content": null,
  "difficulty": "Medium",
  "exampleTestcases": "[4,2,5,1,3]\n[2,1,3]",
  "exampleTestcaseList": [
    "[4,2,5,1,3]",
    "[2,1,3]"
  ],
  "sampleTestCase": "[4,2,5,1,3]",
  "metaData": "{\n  \"name\": \"treeToDoublyList\",\n  \"params\": [\n    {\n      \"name\": \"root\",\n      \"type\": \"TreeNode\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"ListNode\"\n  },\n  \"languages\": [\n    \"cpp\",\n    \"java\",\n    \"python\",\n    \"csharp\",\n    \"javascript\",\n    \"python3\",\n    \"kotlin\",\n    \"ruby\",\n    \"scala\",\n    \"c\",\n    \"golang\",\n    \"swift\",\n    \"php\",\n    \"typescript\"\n  ],\n  \"manual\": true, \"typescriptCustomType\" : \"class _Node {\\n    val: number\\n    left: _Node | null\\n    right: _Node | null\\n    \\n    constructor(val?: number, left?: _Node | null, right?: _Node | null) {\\n        this.val = (val===undefined ? 0 : val)\\n        this.left = (left===undefined ? null : left)\\n        this.right = (right===undefined ? null : right)\\n    }\\n}\\n\"\n\n}",
  "codeSnippets": null,
  "hints": []
}