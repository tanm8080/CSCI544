{
  "questionId": "180",
  "questionFrontendId": "180",
  "title": "Consecutive Numbers",
  "content": "<p>Table: <code>Logs</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| num         | varchar |\n+-------------+---------+\nIn SQL, id is the primary key for this table.\nid is an autoincrement column starting from 1.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Find all numbers that appear at least three times consecutively.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The&nbsp;result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nLogs table:\n+----+-----+\n| id | num |\n+----+-----+\n| 1  | 1   |\n| 2  | 1   |\n| 3  | 1   |\n| 4  | 2   |\n| 5  | 1   |\n| 6  | 2   |\n| 7  | 2   |\n+----+-----+\n<strong>Output:</strong> \n+-----------------+\n| ConsecutiveNums |\n+-----------------+\n| 1               |\n+-----------------+\n<strong>Explanation:</strong> 1 is the only number that appears consecutively for at least three times.\n</pre>\n",
  "difficulty": "Medium",
  "exampleTestcases": "{\"headers\":{\"Logs\":[\"id\",\"num\"]},\"rows\":{\"Logs\":[[1,1],[2,1],[3,1],[4,2],[5,1],[6,2],[7,2]]}}",
  "exampleTestcaseList": [
    "{\"headers\":{\"Logs\":[\"id\",\"num\"]},\"rows\":{\"Logs\":[[1,1],[2,1],[3,1],[4,2],[5,1],[6,2],[7,2]]}}"
  ],
  "sampleTestCase": "{\"headers\":{\"Logs\":[\"id\",\"num\"]},\"rows\":{\"Logs\":[[1,1],[2,1],[3,1],[4,2],[5,1],[6,2],[7,2]]}}",
  "metaData": "{\"mysql\": [\"Create table If Not Exists Logs (id int, num int)\"], \"mssql\": [\"Create table Logs (id int, num int)\"], \"oraclesql\": [\"Create table Logs (id int, num int)\"], \"database\": true, \"name\": \"consecutive_numbers\", \"pythondata\": [\"Logs = pd.DataFrame([], columns=['id', 'num']).astype({'id':'Int64', 'num':'Int64'})\"], \"postgresql\": [\"Create table If Not Exists Logs (id int, num int)\"], \"database_schema\": {\"Logs\": {\"id\": \"INT\", \"num\": \"INT\"}}}",
  "codeSnippets": [
    {
      "lang": "MySQL",
      "langSlug": "mysql",
      "code": "# Write your MySQL query statement below\n"
    },
    {
      "lang": "MS SQL Server",
      "langSlug": "mssql",
      "code": "/* Write your T-SQL query statement below */\n"
    },
    {
      "lang": "Oracle",
      "langSlug": "oraclesql",
      "code": "/* Write your PL/SQL query statement below */\n"
    },
    {
      "lang": "Pandas",
      "langSlug": "pythondata",
      "code": "import pandas as pd\n\ndef consecutive_numbers(logs: pd.DataFrame) -> pd.DataFrame:\n    "
    },
    {
      "lang": "PostgreSQL",
      "langSlug": "postgresql",
      "code": "-- Write your PostgreSQL query statement below\n"
    }
  ],
  "hints": []
}